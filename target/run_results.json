{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.10.13", "generated_at": "2025-10-03T14:05:11.378735Z", "invocation_id": "a2feb33f-7271-40c1-8546-1bf496f3b679", "invocation_started_at": "2025-10-03T14:05:09.543709Z", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:10.664239Z", "completed_at": "2025-10-03T14:05:10.669797Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:10.670148Z", "completed_at": "2025-10-03T14:05:10.756010Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09328579902648926, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.stg_fixtures", "compiled": true, "compiled_code": "with \nsource as (\n    select\n        matchday::int as gameweek,\n        home_score_full_time::int as home_goals,\n        away_score_full_time::int as away_goals,\n        home_team_tla::varchar as home_team_abbreviation,\n        away_team_tla::varchar as away_team_abbreviation,\n    from \"rawdb\".\"football_data\".\"fixtures\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"staging\".\"stg_fixtures\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:10.761450Z", "completed_at": "2025-10-03T14:05:10.764329Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:10.764698Z", "completed_at": "2025-10-03T14:05:10.806327Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0463862419128418, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.stg_gameweeks", "compiled": true, "compiled_code": "with \nsource as (\n    select\n        id::int as gameweek,\n        is_next as is_coming_gameweek,\n    from \"rawdb\".\"fpl\".\"events\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"staging\".\"stg_gameweeks\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:10.810237Z", "completed_at": "2025-10-03T14:05:10.813646Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:10.814002Z", "completed_at": "2025-10-03T14:05:10.859062Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.050366878509521484, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.stg_players", "compiled": true, "compiled_code": "with \nsource as (\n    select *\n    from \"rawdb\".\"fpl\".\"elements\"\n),\n\nremove_non_selectables as (\n    select * \n    from source \n    where can_select and not removed\n),\n\nselect_columns as (\n    select\n        id::int as player_id,\n        first_name::varchar as first_name,\n        second_name::varchar as second_name,\n        web_name::varchar as display_name,\n        team::int as team_id,\n        element_type::int as position_id,\n        now_cost::int as cost,\n        chance_of_playing_this_round::int as availability_this_gameweek,\n        chance_of_playing_next_round::int as availability_next_gameweek,\n        status::varchar as availability_code,\n        news::varchar as availability_details,\n        total_points::int as total_points,\n        event_points:: int as gameweek_points,\n        points_per_game::float as points_per_game,\n        form::float as current_form,\n        in_dreamteam::boolean as current_dreamteam,\n        dreamteam_count::int as dreamteam_appearances,\n        influence::float as influence,\n        creativity::float as creativity,\n        threat::float as threat,\n        ict_index::float as ict_index,\n        selected_by_percent::float as selection_rate,\n        transfers_in_event::int as gameweek_transfers_in,\n        transfers_out_event::int as gameweek_transfers_out,\n        starts::int as starts,\n        minutes::int as minutes_played,\n        goals_scored::int as goals_scored,\n        expected_goals::float as expected_goals_scored,\n        assists::int as goals_assisted,\n        expected_assists::float as expected_goals_assisted,\n        goals_conceded::int as goals_conceded,\n        expected_goals_conceded::float as expected_goals_conceded,\n        clearances_blocks_interceptions::int as clearances_blocks_interceptions,\n        recoveries::int as recoveries,\n        tackles::int as tackles,\n        own_goals::int as own_goals,\n        saves::int as saves_made,\n        clean_sheets::int as clean_sheets,\n        penalties_saved::int as penalties_saved,\n        yellow_cards::int as yellow_cards,\n        red_cards::int as red_cards,\n        bonus::int as bonus_points,\n        bps::int as bonus_points_system,\n        penalties_order::int as team_penalty_takers_rank,\n        penalties_missed::int as penalties_missed,\n        \n    from remove_non_selectables\n)\n\nselect * from select_columns", "relation_name": "\"analytics\".\"staging\".\"stg_players\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:10.863480Z", "completed_at": "2025-10-03T14:05:10.865892Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:10.866184Z", "completed_at": "2025-10-03T14:05:10.903729Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.041558027267456055, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.stg_positions", "compiled": true, "compiled_code": "with \nsource as (\n    select\n        id::int as position_id,\n        plural_name_short::varchar as position,\n        squad_select::int as max_selectable,\n        squad_min_play::int as min_playable,\n        squad_max_play::int as max_playable,\n    from \"rawdb\".\"fpl\".\"element_types\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"staging\".\"stg_positions\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:10.906797Z", "completed_at": "2025-10-03T14:05:10.909028Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:10.909322Z", "completed_at": "2025-10-03T14:05:10.942404Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.036924123764038086, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.stg_stats", "compiled": true, "compiled_code": "with \nsource as (\n    select *\n    from \"rawdb\".\"fpl\".\"element_stats\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"staging\".\"stg_stats\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:10.945677Z", "completed_at": "2025-10-03T14:05:10.948045Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:10.948336Z", "completed_at": "2025-10-03T14:05:10.987047Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04268932342529297, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.stg_teams", "compiled": true, "compiled_code": "with \nsource as (\n    select\n        id::int as team_id,\n        name::varchar as team,\n        short_name::varchar as team_abbreviation,\n        strength::int as team_strength_score,\n        strength_attack_home::int as team_strength_home_attack,\n        strength_defence_home::int as team_strength_home_defence,\n        strength_attack_away::int as team_strength_away_attack,\n        strength_defence_away::int as team_strength_away_defence\n    from \"rawdb\".\"fpl\".\"teams\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"staging\".\"stg_teams\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:10.990488Z", "completed_at": "2025-10-03T14:05:10.993002Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:10.993341Z", "completed_at": "2025-10-03T14:05:11.030295Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04106402397155762, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.int_fixtures", "compiled": true, "compiled_code": "with \nsource as (\n    select         \n        gameweek,\n        home_goals,\n        away_goals,\n        home_team_abbreviation,\n        away_team_abbreviation,\n    from \"analytics\".\"staging\".\"stg_fixtures\"\n),\n\nfix_nfo as (\n    select * exclude(home_team_abbreviation, away_team_abbreviation),\n        case when home_team_abbreviation='NOT' then 'NFO' else home_team_abbreviation end as home_team_abbreviation,\n        case when away_team_abbreviation='NOT' then 'NFO' else away_team_abbreviation end as away_team_abbreviation,\n    from source\n),\n\nhome_fixtures as (\n    select \n        gameweek,\n        home_team_abbreviation as team_abbreviation,\n        away_team_abbreviation as opponent_abbreviation,\n        true as home\n    from fix_nfo\n),\n\naway_fixtures as (\n    select \n        gameweek,\n        away_team_abbreviation as team_abbreviation,\n        home_team_abbreviation as opponent_abbreviation,\n        false as home\n    from fix_nfo\n),\n\nall_fixtures as (\n    select * from home_fixtures union all select * from away_fixtures \n)\n\nselect * from all_fixtures", "relation_name": "\"analytics\".\"intermediate\".\"int_fixtures\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:11.033436Z", "completed_at": "2025-10-03T14:05:11.035460Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:11.035727Z", "completed_at": "2025-10-03T14:05:11.068992Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.036820411682128906, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.int_gameweeks", "compiled": true, "compiled_code": "with \nsource as (\n    select *\n    from \"analytics\".\"staging\".\"stg_gameweeks\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"intermediate\".\"int_gameweeks\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:11.073206Z", "completed_at": "2025-10-03T14:05:11.075600Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:11.075905Z", "completed_at": "2025-10-03T14:05:11.109247Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03765368461608887, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.int_positions", "compiled": true, "compiled_code": "with \nsource as (\n    select *\n    from \"analytics\".\"staging\".\"stg_positions\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"intermediate\".\"int_positions\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:11.113185Z", "completed_at": "2025-10-03T14:05:11.115429Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:11.115690Z", "completed_at": "2025-10-03T14:05:11.152107Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.040071964263916016, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.int_teams", "compiled": true, "compiled_code": "with \nsource as (\n    select * exclude(team),\n        replace(team, '''','') as team,\n    from \"analytics\".\"staging\".\"stg_teams\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"intermediate\".\"int_teams\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:11.155550Z", "completed_at": "2025-10-03T14:05:11.157533Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:11.157806Z", "completed_at": "2025-10-03T14:05:11.190232Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0358128547668457, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.dim_gameweeks", "compiled": true, "compiled_code": "with \nsource as (\n    select *\n    from \"analytics\".\"intermediate\".\"int_gameweeks\"\n)\n\nselect * from source", "relation_name": "\"analytics\".\"core\".\"dim_gameweeks\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:11.193269Z", "completed_at": "2025-10-03T14:05:11.195800Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:11.196069Z", "completed_at": "2025-10-03T14:05:11.255702Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.0649571418762207, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.int_players", "compiled": true, "compiled_code": "with \nsource as (\n    select * from \"analytics\".\"staging\".\"stg_players\"\n),\n\ngameweek as (\n    select gameweek-1 as gameweeks_played from \"analytics\".\"intermediate\".\"int_gameweeks\" where is_coming_gameweek\n),\n\nderive as (\n    select\n        player_id,\n        replace(display_name, '''','') as display_name,\n        team_id, \n        position_id,\n        cost/10 as cost,\n        coalesce(availability_next_gameweek, 100) as availability,\n        availability_code,\n        case availability_code\n            when 'a' then 'Available'\n            when 'i' then 'Injured'\n            when 'd' then 'Doubtful (' || coalesce(availability_next_gameweek, 100)::varchar || '%)'\n            when 's' then 'Suspended'\n            else null end as availability_status,\n        availability_details,\n        starts,\n        coalesce(minutes_played, 0) as minutes_played,\n        cast(coalesce(minutes_played, 0)/(select gameweeks_played from gameweek) as int) as minutes_played_per_gameweek,\n        total_points,\n        gameweek_points,\n        coalesce(total_points/(select gameweeks_played from gameweek), 0) as points_per_gameweek,\n        coalesce(total_points / minutes_played * 90, 0) as points_per_90,\n        total_points / (cost / 10) as points_per_million,\n        current_form,\n        current_dreamteam,\n        dreamteam_appearances,\n        influence,\n        creativity,\n        threat,\n        -- ict_index,\n        selection_rate,\n        -- gameweek_transfers_in,\n        -- gameweek_transfers_out,\n        -- gameweek_transfers_in-gameweek_transfers_out as gameweek_net_transfers,\n        \n        goals_scored,\n        goals_scored / minutes_played * 90 as goals_scored_per_90,\n        goals_scored / (select gameweeks_played from gameweek) as goals_scored_per_gameweek,\n        expected_goals_scored,\n        expected_goals_scored / minutes_played * 90 as expected_goals_scored_per_90,\n        expected_goals_scored/(select gameweeks_played from gameweek) as expected_goals_scored_per_gameweek,\n        goals_scored / expected_goals_scored as goals_scored_xdifferential,\n        \n        goals_assisted,\n        goals_assisted / minutes_played * 90 as goals_assisted_per_90,\n        goals_assisted/(select gameweeks_played from gameweek) as goals_assisted_per_gameweek,\n        expected_goals_assisted,\n        expected_goals_assisted / minutes_played * 90 as expected_goals_assisted_per_90,\n        expected_goals_assisted/(select gameweeks_played from gameweek) as expected_goals_assisted_per_gameweek,\n        goals_assisted / expected_goals_assisted as goals_assisted_xdifferential,\n        \n        goals_scored + goals_assisted as goal_contributions,\n        expected_goals_scored + expected_goals_assisted as expected_goal_contributions,\n        (goals_scored + goals_assisted) / (expected_goals_scored + expected_goals_assisted) as expected_goal_contributions_xdifferential,\n        \n        goals_conceded,\n        expected_goals_conceded,\n        clearances_blocks_interceptions,\n        recoveries,\n        tackles,\n        own_goals,\n        saves_made,\n        clean_sheets,\n        penalties_saved,\n        yellow_cards,\n        red_cards,\n        bonus_points,\n        bonus_points_system,\n        team_penalty_takers_rank,\n        penalties_missed,\n    from source\n),\n\nadd_cost_category as (\n    select *,\n        ntile(5) over (partition by position_id order by cost) as cost_category \n    from derive\n),\n\nconvert_cost_category as (\n    select * exclude(cost_category),\n        case cost_category when 1 then 'Budget' when 2 then 'Budget' when 3 then 'Mid-Range' when 4 then 'Mid-Range' when 5 then 'Premium' else null end as cost_category \n    from add_cost_category\n),\n\ncoalesce_nulls as (\n    select \n        * exclude(\n            points_per_90, \n            goals_scored_per_90, goals_scored_xdifferential, expected_goals_scored_per_90,\n            goals_assisted_per_90, goals_assisted_xdifferential, expected_goals_assisted_per_90\n            ),\n        case when minutes_played>0 then points_per_90 else 0 end as points_per_90,\n        case when minutes_played>0 then goals_scored_per_90 else 0 end as goals_scored_per_90,\n        case when minutes_played>0 then goals_scored_xdifferential else 0 end as goals_scored_xdifferential,\n        case when minutes_played>0 then expected_goals_scored_per_90 else 0 end as expected_goals_scored_per_90,\n        case when minutes_played>0 then goals_assisted_per_90 else 0 end as goals_assisted_per_90,\n        case when minutes_played>0 then goals_assisted_xdifferential else 0 end as goals_assisted_xdifferential,\n        case when minutes_played>0 then expected_goals_assisted_per_90 else 0 end as expected_goals_assisted_per_90,\n    from convert_cost_category\n)\n\n\n\n\nselect * from coalesce_nulls", "relation_name": "\"analytics\".\"intermediate\".\"int_players\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:11.260564Z", "completed_at": "2025-10-03T14:05:11.263415Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:11.263984Z", "completed_at": "2025-10-03T14:05:11.299522Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04041409492492676, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.fact_fixtures", "compiled": true, "compiled_code": "with \nfixtures as (\n    select *\n    from \"analytics\".\"intermediate\".\"int_fixtures\"\n),\n\nteams as (\n    select * from \"analytics\".\"intermediate\".\"int_teams\"\n),\n\njoined_own_strength as (\n    select\n        fixtures.*,\n        teams.team_strength_score as team_strength,\n        case when home then teams.team_strength_home_attack else teams.team_strength_away_attack end as team_attack_strength,\n        case when home then teams.team_strength_home_defence else teams.team_strength_away_defence end as team_defence_strength,\n    from fixtures left join teams using(team_abbreviation)\n),\n\njoined_opponent_strength as (\n    select\n        joined_own_strength.*,\n        teams.team_strength_score as opponent_strength,\n        case when home then teams.team_strength_away_attack else teams.team_strength_home_attack end as opponent_attack_strength,\n        case when home then teams.team_strength_away_defence else teams.team_strength_home_defence end as opponent_defence_strength,\n    from joined_own_strength left join teams on joined_own_strength.opponent_abbreviation=teams.team_abbreviation\n),\n\nadd_bias as (\n    select\n        gameweek,\n        home,\n        team_abbreviation, \n        opponent_abbreviation, \n        team_attack_strength, team_defence_strength, opponent_attack_strength, opponent_defence_strength,\n        --team_strength - opponent_strength as strength_bias,\n        team_attack_strength - opponent_defence_strength as attacking_bias,\n        team_defence_strength - opponent_attack_strength as defending_bias,\n    from joined_opponent_strength\n)\n\nselect * from add_bias", "relation_name": "\"analytics\".\"core\".\"fact_fixtures\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-10-03T14:05:11.302801Z", "completed_at": "2025-10-03T14:05:11.305986Z"}, {"name": "execute", "started_at": "2025-10-03T14:05:11.306269Z", "completed_at": "2025-10-03T14:05:11.366233Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.06723976135253906, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.fpl_analytics.obt_players", "compiled": true, "compiled_code": "with \nplayers as (\n    select * from \"analytics\".\"intermediate\".\"int_players\"\n),\n\nteams as (\n    select * from \"analytics\".\"intermediate\".\"int_teams\"\n),\n\npositions as (\n    select * from \"analytics\".\"intermediate\".\"int_positions\"\n),\n\ngameweeks as (\n    select gameweek from core.dim_gameweeks where is_coming_gameweek\n),\n\nfixtures as (\n    select *, \n        ntile(5) over (order by attacking_bias) as attacking_bias_cat,\n        ntile(5) over (order by defending_bias) as defending_bias_cat\n    from core.fact_fixtures\n),\n\nadd_icons as (\n    select *,\n        case attacking_bias_cat\n            when 1 then ':heart:'\n            when 2 then ':orange_heart:'\n            when 3 then ':yellow_heart:'\n            when 4 then ':green_heart:'\n            when 5 then ':blue_heart:'\n            else ':black_heart:'\n            end as attacking_bias_icon,\n        case defending_bias_cat\n            when 1 then ':heart:'\n            when 2 then ':orange_heart:'\n            when 3 then ':yellow_heart:'\n            when 4 then ':green_heart:'\n            when 5 then ':blue_heart:'\n            else ':black_heart:'\n            end as defending_bias_icon\n    from fixtures\n),\n\nfilter_fixtures as (\n    select * from add_icons\n    where gameweek >= (select * from gameweeks) and gameweek <= ((select * from gameweeks)+2)\n),\n\naggregate_fixtures as (\n    select\n        team_abbreviation,\n        listagg(opponent_abbreviation, ' - ') over (partition by team_abbreviation order by gameweek) as opponent_abbreviations,\n        (sum(attacking_bias) over (partition by team_abbreviation order by gameweek)) / 3 as attacking_biases_value,\n        (sum(defending_bias) over (partition by team_abbreviation order by gameweek)) / 3 as defending_biases_value,\n        listagg(attacking_bias_icon, '') over (partition by team_abbreviation order by gameweek) as attacking_biases,\n        listagg(defending_bias_icon, '') over (partition by team_abbreviation order by gameweek) as defending_biases,\n    from filter_fixtures,\n    qualify row_number() over (partition by team_abbreviation order by gameweek desc) = 1\n),\n\n\njoin_to_players as (\n    select\n        players.*,\n        teams.team,\n        teams.team_abbreviation,\n        positions.position,\n        aggregate_fixtures.opponent_abbreviations,\n        aggregate_fixtures.attacking_biases_value,\n        aggregate_fixtures.defending_biases_value,\n        aggregate_fixtures.defending_biases || '/' || aggregate_fixtures.attacking_biases as biases,\n    from players \n        left join teams using(team_id)\n        left join positions using(position_id)\n        left join aggregate_fixtures using(team_abbreviation)\n),\n\nselect_cols as (\n    select\n        player_id,\n        display_name as player,\n        display_name || ' [' || team_abbreviation || ']' as display_name,\n        team_id,\n        team,\n        team_abbreviation,\n        opponent_abbreviations,\n        attacking_biases_value,\n        defending_biases_value,\n        biases,\n        position_id,\n        position,\n        cost,\n        cost_category,\n\n        availability,\n        availability_status,\n        availability_details,\n\n        current_form,\n\n        total_points,\n        points_per_gameweek,\n        points_per_90,\n        points_per_million,\n        gameweek_points,\n\n        minutes_played,\n        minutes_played_per_gameweek,\n        starts,\n\n        current_dreamteam,\n        dreamteam_appearances,\n\n        goals_scored,\n        goals_scored_per_90,\n        goals_scored_per_gameweek,\n        expected_goals_scored,\n        expected_goals_scored_per_90,\n        expected_goals_scored_per_gameweek,\n        goals_scored_xdifferential,\n\n        goals_assisted,\n        goals_assisted_per_90,\n        goals_assisted_per_gameweek,\n        expected_goals_assisted,\n        expected_goals_assisted_per_90,\n        expected_goals_assisted_per_gameweek,\n        goals_assisted_xdifferential,\n\n    from join_to_players\n)\n\nselect * from select_cols", "relation_name": "\"analytics\".\"core\".\"obt_players\"", "batch_results": null}], "elapsed_time": 0.8972752094268799, "args": {"favor_state": false, "source_freshness_run_project_hooks": true, "use_colors": true, "require_all_warnings_handled_by_warn_error": false, "require_nested_cumulative_type_params": false, "indirect_selection": "eager", "log_format_file": "debug", "profiles_dir": "/home/robgriffin247/fpl", "log_level": "info", "send_anonymous_usage_stats": true, "introspect": true, "project_dir": "/home/robgriffin247/fpl", "require_yaml_configuration_for_mf_time_spines": false, "skip_nodes_if_on_run_start_fails": false, "log_format": "default", "print": true, "require_explicit_package_overrides_for_builtin_materializations": true, "log_path": "/home/robgriffin247/fpl/logs", "printer_width": 80, "require_resource_names_without_spaces": true, "show": false, "show_all_deprecations": false, "populate_cache": true, "invocation_command": "dbt build", "exclude_resource_types": [], "exclude": [], "which": "build", "write_json": true, "require_generic_test_arguments_property": true, "state_modified_compare_vars": false, "select": [], "resource_types": [], "use_colors_file": true, "validate_macro_args": false, "cache_selected_only": false, "partial_parse": true, "static_parser": true, "warn_error_options": {"error": [], "warn": [], "silence": []}, "log_level_file": "debug", "show_resource_report": false, "require_batched_execution_for_custom_microbatch_strategy": false, "strict_mode": false, "quiet": false, "upload_to_artifacts_ingest_api": false, "vars": {}, "defer": false, "use_fast_test_edges": false, "empty": false, "partial_parse_file_diff": true, "state_modified_compare_more_unrendered_values": false, "version_check": true, "macro_debugging": false, "export_saved_queries": false, "include_saved_query": false, "log_file_max_bytes": 10485760}}